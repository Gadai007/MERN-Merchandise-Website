[{"F:\\LCO-bootcamp\\client\\src\\index.js":"1","F:\\LCO-bootcamp\\client\\src\\App.js":"2","F:\\LCO-bootcamp\\client\\src\\Routes.js":"3","F:\\LCO-bootcamp\\client\\src\\core\\Home.jsx":"4","F:\\LCO-bootcamp\\client\\src\\core\\Base.jsx":"5","F:\\LCO-bootcamp\\client\\src\\core\\Footer.jsx":"6","F:\\LCO-bootcamp\\client\\src\\core\\Navbar.jsx":"7","F:\\LCO-bootcamp\\client\\src\\user\\Signup.jsx":"8","F:\\LCO-bootcamp\\client\\src\\user\\Signin.jsx":"9","F:\\LCO-bootcamp\\client\\src\\auth\\helper\\index.js":"10","F:\\LCO-bootcamp\\client\\src\\auth\\helper\\PrivateRoutes.js":"11","F:\\LCO-bootcamp\\client\\src\\auth\\helper\\AdminRoutes.js":"12","F:\\LCO-bootcamp\\client\\src\\user\\UserDashBoard.jsx":"13","F:\\LCO-bootcamp\\client\\src\\user\\AdminDashBoard.jsx":"14","F:\\LCO-bootcamp\\client\\src\\admin\\AddCategory.jsx":"15","F:\\LCO-bootcamp\\client\\src\\admin\\helper\\adminapicall.js":"16","F:\\LCO-bootcamp\\client\\src\\admin\\ManageCategories.jsx":"17","F:\\LCO-bootcamp\\client\\src\\admin\\AddProduct.jsx":"18","F:\\LCO-bootcamp\\client\\src\\admin\\ManageProducts.jsx":"19","F:\\LCO-bootcamp\\client\\src\\admin\\UpdateProduct.jsx":"20","F:\\LCO-bootcamp\\client\\src\\admin\\UpdateCategory.jsx":"21","F:\\LCO-bootcamp\\client\\src\\core\\Card.jsx":"22","F:\\LCO-bootcamp\\client\\src\\core\\Image.jsx":"23","F:\\LCO-bootcamp\\client\\src\\core\\helper\\coreapicalls.js":"24","F:\\LCO-bootcamp\\client\\src\\core\\Cart.jsx":"25","F:\\LCO-bootcamp\\client\\src\\core\\Payment.jsx":"26","F:\\LCO-bootcamp\\client\\src\\user\\helper\\userapicalls.js":"27"},{"size":198,"mtime":1608658302065,"results":"28","hashOfConfig":"29"},{"size":241,"mtime":1608021730958,"results":"30","hashOfConfig":"29"},{"size":1915,"mtime":1608367820708,"results":"31","hashOfConfig":"29"},{"size":1091,"mtime":1608313417232,"results":"32","hashOfConfig":"29"},{"size":541,"mtime":1608021720994,"results":"33","hashOfConfig":"29"},{"size":305,"mtime":1608109457991,"results":"34","hashOfConfig":"29"},{"size":2219,"mtime":1607881801767,"results":"35","hashOfConfig":"29"},{"size":4337,"mtime":1608019156862,"results":"36","hashOfConfig":"29"},{"size":4100,"mtime":1607969815057,"results":"37","hashOfConfig":"29"},{"size":1573,"mtime":1607798936626,"results":"38","hashOfConfig":"29"},{"size":595,"mtime":1607875298534,"results":"39","hashOfConfig":"29"},{"size":628,"mtime":1607874906987,"results":"40","hashOfConfig":"29"},{"size":2274,"mtime":1609347541879,"results":"41","hashOfConfig":"29"},{"size":2455,"mtime":1607971457568,"results":"42","hashOfConfig":"29"},{"size":2922,"mtime":1607969180062,"results":"43","hashOfConfig":"29"},{"size":3685,"mtime":1608231451127,"results":"44","hashOfConfig":"29"},{"size":2982,"mtime":1608196040977,"results":"45","hashOfConfig":"29"},{"size":7607,"mtime":1608141257485,"results":"46","hashOfConfig":"29"},{"size":2941,"mtime":1608196000203,"results":"47","hashOfConfig":"29"},{"size":8522,"mtime":1608191577424,"results":"48","hashOfConfig":"29"},{"size":3470,"mtime":1608231485819,"results":"49","hashOfConfig":"29"},{"size":1902,"mtime":1608536130697,"results":"50","hashOfConfig":"29"},{"size":227,"mtime":1608313496246,"results":"51","hashOfConfig":"29"},{"size":1820,"mtime":1609171150934,"results":"52","hashOfConfig":"29"},{"size":1646,"mtime":1608731968858,"results":"53","hashOfConfig":"29"},{"size":2598,"mtime":1609351143840,"results":"54","hashOfConfig":"29"},{"size":390,"mtime":1609320128112,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"yhmztk",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"F:\\LCO-bootcamp\\client\\src\\index.js",[],["116","117"],"F:\\LCO-bootcamp\\client\\src\\App.js",[],"F:\\LCO-bootcamp\\client\\src\\Routes.js",[],"F:\\LCO-bootcamp\\client\\src\\core\\Home.jsx",["118"],"import React, { useState, useEffect } from 'react'\r\nimport Base from './Base'\r\nimport Card from './Card'\r\nimport { getProducts } from './helper/coreapicalls'\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadAllProduct = () => {\r\n        getProducts().then(response => {\r\n            if (response.error) {\r\n                setError(true)\r\n            } else {\r\n                setProducts(response)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadAllProduct()\r\n    }, [])\r\n\r\n    return (\r\n        <Base\r\n            title='Home Page'\r\n            description='Welcome to the store'>\r\n            <div className=\"row text-center\">\r\n                {products.map((product, index) => {\r\n                    return (\r\n                        <div className=\"col-4\" key={index}>\r\n                            <Card product={product}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","F:\\LCO-bootcamp\\client\\src\\core\\Base.jsx",[],"F:\\LCO-bootcamp\\client\\src\\core\\Footer.jsx",[],"F:\\LCO-bootcamp\\client\\src\\core\\Navbar.jsx",[],"F:\\LCO-bootcamp\\client\\src\\user\\Signup.jsx",[],"F:\\LCO-bootcamp\\client\\src\\user\\Signin.jsx",[],"F:\\LCO-bootcamp\\client\\src\\auth\\helper\\index.js",[],"F:\\LCO-bootcamp\\client\\src\\auth\\helper\\PrivateRoutes.js",[],"F:\\LCO-bootcamp\\client\\src\\auth\\helper\\AdminRoutes.js",[],"F:\\LCO-bootcamp\\client\\src\\user\\UserDashBoard.jsx",["119"],"import React, { useEffect, useState } from 'react'\r\nimport Base from '../core/Base'\r\nimport { isAuthenticated } from '../auth/helper/index'\r\nimport { userProducts } from './helper/userapicalls'\r\n\r\n\r\n\r\nconst UserDashBoard = () => {\r\n\r\n    const [products, setProducts] = useState([])\r\n\r\n\r\n    const { token, user: { id, name, email } } = isAuthenticated()\r\n\r\n    const preLoad = (id, token) => {\r\n        userProducts(id, token).then(response => {\r\n            response.map(res => {\r\n                return setProducts(prevProduct => {\r\n                    return [...prevProduct, res]\r\n                })\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        preLoad(id, token)\r\n    },[id])\r\n\r\n    const userLeftSide = () => {\r\n        return (\r\n            <div className=\"card admin\">\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title color\">User Information</h3>\r\n                    <h5 className=\"card-text color\">Name: {name}</h5>\r\n                    <h5 className=\"card-text color\">Email: {email}</h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const userRightSide = () => {\r\n        return products.length === 0 ? (\r\n            <h3>No products available Buy Now</h3>\r\n        ) : (\r\n                products.map(product => {\r\n                    return (\r\n                        <div className=\"card mb-4\" key={product._id} >\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"card-title color\">Name: {product.products[0].name}</h3>\r\n                                <h6 className=\"card-text color\">Price: {product.products[0].price}</h6>\r\n                                <h6 className=\"card-text color\">Status: {product.status}</h6>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n    }\r\n\r\n    return (\r\n        <Base title='UserDashBoard' description='UserDashBoard page'>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLeftSide()}</div>\r\n                <div className=\"col-9\">{userRightSide()}</div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UserDashBoard\r\n","F:\\LCO-bootcamp\\client\\src\\user\\AdminDashBoard.jsx",[],"F:\\LCO-bootcamp\\client\\src\\admin\\AddCategory.jsx",[],"F:\\LCO-bootcamp\\client\\src\\admin\\helper\\adminapicall.js",[],"F:\\LCO-bootcamp\\client\\src\\admin\\ManageCategories.jsx",[],"F:\\LCO-bootcamp\\client\\src\\admin\\AddProduct.jsx",[],"F:\\LCO-bootcamp\\client\\src\\admin\\ManageProducts.jsx",[],"F:\\LCO-bootcamp\\client\\src\\admin\\UpdateProduct.jsx",["120"],"import React, { useState, useEffect } from 'react'\r\nimport { updateProduct, getAllCategories, getAProduct } from './helper/adminapicall'\r\nimport { isAuthenticated } from '../auth/helper/index'\r\nimport Base from '../core/Base'\r\n\r\nconst UpdateProduct = (props) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        stock: '',\r\n        photo: '',\r\n        categories: [],\r\n        catergory: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        formData: new FormData()\r\n    })\r\n\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const productId = props.match.params.productId\r\n\r\n    const preLoad = (productId) => {\r\n        getAProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues(preValues => {\r\n                    return { ...preValues, error: data.error }\r\n                })\r\n            } else {\r\n                getCategories()\r\n                setValues(preValues => {\r\n                    return {\r\n                        ...preValues,\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        price: data.price,\r\n                        catergory: data.category._id,\r\n                        stock: data.stock,\r\n                        formData: new FormData()\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        getAllCategories().then(data => {\r\n            if (data.error) {\r\n                setValues(preValues => {\r\n                    return { ...preValues, error: data.error }\r\n                })\r\n            } else {\r\n                setValues({ categories: data, formData: new FormData() })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        preLoad(productId)\r\n    }, [])\r\n\r\n    const onChangeHandler = (event) => {\r\n        let value = ''\r\n        if (event.target.name === 'photo') {\r\n            value = event.target.files[0]\r\n        } else {\r\n            value = event.target.value\r\n        }\r\n\r\n        values.formData.set(event.target.name, value)\r\n        setValues(preValues => {\r\n            return { ...preValues, [event.target.name]: value }\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault()\r\n        setValues(preValues => {\r\n            return { ...preValues, error: '', loading: true }\r\n        })\r\n        updateProduct(props.match.params.productId, user.id, token, values.formData).then(response => {\r\n            if (response.error) {\r\n                setValues(preValues => {\r\n                    return { ...preValues, error: response.error, loading: false }\r\n                })\r\n            } else {\r\n                setValues(preValues => {\r\n                    return {\r\n                        ...preValues,\r\n                        name: '',\r\n                        description: '',\r\n                        price: '',\r\n                        photo: '',\r\n                        stock: '',\r\n                        loading: false,\r\n                        createdProduct: response.name\r\n                    }\r\n                })\r\n                setTimeout(() => {\r\n                    props.history.push('/admin/dashboard')\r\n                }, 2000)\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    const loadingMessage = () => {\r\n        return (\r\n            <div className=\"row my-3\">\r\n                <div className=\"col-md-6 offset-sm\">\r\n                    <div className=\"alert alert-success\"\r\n                        style={{ display: values.loading ? '' : 'none' }}>\r\n                        LOADING....\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return (\r\n            <div className=\"row my-3\">\r\n                <div className=\"col-md-6 offset-sm\">\r\n                    <div className=\"alert alert-success\"\r\n                        style={{ display: values.createdProduct ? '' : 'none' }}>\r\n                        {values.createdProduct} updated successfully\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const errorMessage = () => {\r\n        return (\r\n            <div className=\"row my-3\">\r\n                <div className=\"col-md-6 offset-sm\">\r\n                    <div className=\"alert alert-danger\"\r\n                        style={{ display: values.error ? '' : 'none' }}>\r\n                        {values.error}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createProductForm = () => {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    {loadingMessage()}\r\n                    {successMessage()}\r\n                    {errorMessage()}\r\n                    <form className='product'>\r\n                        <div className=\"form-group\">\r\n                            <label>Add Photo</label>\r\n                            <input\r\n                                className='form-control'\r\n                                type=\"file\"\r\n                                onChange={onChangeHandler}\r\n\r\n                                name='photo'\r\n                                accept='image'\r\n                                placeholder='choose a file' />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className='form-control'\r\n                                type=\"text\"\r\n                                onChange={onChangeHandler}\r\n                                placeholder='Enter your product'\r\n                                name='name'\r\n                                value={values.name} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                                className='form-control'\r\n                                type=\"email\"\r\n                                onChange={onChangeHandler}\r\n                                placeholder='Description'\r\n                                name='description'\r\n                                value={values.description} >\r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className='form-control'\r\n                                type=\"number\"\r\n                                onChange={onChangeHandler}\r\n                                placeholder='price'\r\n                                name='price'\r\n                                value={values.price} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Category</label>\r\n                            <select\r\n                                className='form-control'\r\n                                onChange={onChangeHandler}\r\n                                placeholder='Category'\r\n                                name='category' >\r\n                                <option>--SELECT--</option>\r\n                                {values.categories.map(category => (\r\n                                    <option key={category._id} value={category._id}>{category.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className='form-control'\r\n                                type=\"number\"\r\n                                onChange={onChangeHandler}\r\n                                placeholder='Stock'\r\n                                name='stock'\r\n                                value={values.stock} />\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-block success\"\r\n                            onClick={onSubmitHandler}>Update product</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Base title='Update Product' description='Update a product on your own'>\r\n            {createProductForm()}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","F:\\LCO-bootcamp\\client\\src\\admin\\UpdateCategory.jsx",["121"],"import React, {useState, useEffect } from 'react'\r\nimport { getACategory, updateCategory } from './helper/adminapicall'\r\nimport { isAuthenticated } from '../auth/helper/index'\r\nimport Base from '../core/Base'\r\n\r\n\r\nconst UpdateCategory = (props) => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const preLoad = (categoryId) => {\r\n        getACategory(categoryId).then(response => {\r\n            if(response.error){\r\n                setError(true)\r\n            }else{\r\n                setName(response.name)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        preLoad(props.match.params.categoryId)\r\n    }, [])\r\n\r\n    const onChangeHandler = (event) => {\r\n        const { value } = event.target\r\n        setName(value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault()\r\n        updateCategory(props.match.params.categoryId, user.id, token, { name })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(true)\r\n                } else {\r\n                    setSuccess(true)\r\n                    setName('')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        setTimeout(() => {\r\n            props.history.push('/admin/dashboard')\r\n        }, 2000)\r\n    }\r\n\r\n    const successMessage = () => {\r\n        if (success) {\r\n            return (\r\n                <div className=\"row my-3\">\r\n                    <div className=\"col-md-6 offset-sm\">\r\n                        <div className=\"alert alert-success\">\r\n                            Category updated successfully\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const errorMessage = () => {\r\n        if (error) {\r\n            return (\r\n                <div className=\"row my-3\">\r\n                    <div className=\"col-md-6 offset-sm\">\r\n                        <div className=\"alert alert-danger\">\r\n                            Failed to update category\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    {successMessage()}\r\n                    {errorMessage()}\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label>Category Name</label>\r\n                            <input\r\n                                className='form-control'\r\n                                type=\"text\"\r\n                                placeholder='Ex: Summer'\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChangeHandler} />\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-block success\"\r\n                            onClick={onSubmitHandler}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Base title='Update Category' description='Update your category'>\r\n            {categoryForm()}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory\r\n","F:\\LCO-bootcamp\\client\\src\\core\\Card.jsx",["122","123","124"],"import React, {useState, useEffect} from 'react'\r\nimport { Redirect} from 'react-router-dom'\r\nimport { addItemToCart, removeItemFromCart } from './helper/coreapicalls'\r\nimport Image from './Image'\r\n\r\nconst Card = (props) => {\r\n    const { addToCart = true, removeFromCart = false, product, setReload = f => f, reload = undefined } = props\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [count, setCount] = useState(product.count)\r\n\r\n    const itemToCart = () => {\r\n        addItemToCart(product, () => setRedirect(true))\r\n    }\r\n\r\n    const getRedirect = (redirect) => {\r\n        if(redirect){\r\n          return  <Redirect to='/cart'/>\r\n        }\r\n    }\r\n\r\n    const showAddToCart = (addToCart) => {\r\n        return (\r\n            addToCart && (\r\n                <button className='nav-link btn-success' onClick={itemToCart}>\r\n                    Add to cart\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    const showRemoveFromCart = (removeFromCart) => {\r\n        return (\r\n            removeFromCart && (\r\n                <button className='nav-link btn-danger'\r\n                onClick={() => { removeItemFromCart(product._id)\r\n                                 setReload(!reload)}}>\r\n                    Remove from cart\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            <Image id={product._id}/>\r\n            <div className=\"card-body\">\r\n                {getRedirect(redirect)}\r\n                <h3 className=\"card-title color\">Name: {product.name}</h3>\r\n                <h5 className=\"card-text color\">Description: {product.description}</h5>\r\n                <h6 className=\"card-text color\">Price: {product.price}</h6>\r\n                {showAddToCart(addToCart)}\r\n                {showRemoveFromCart(removeFromCart)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","F:\\LCO-bootcamp\\client\\src\\core\\Image.jsx",[],"F:\\LCO-bootcamp\\client\\src\\core\\helper\\coreapicalls.js",[],"F:\\LCO-bootcamp\\client\\src\\core\\Cart.jsx",[],"F:\\LCO-bootcamp\\client\\src\\core\\Payment.jsx",["125","126","127","128","129","130"],"F:\\LCO-bootcamp\\client\\src\\user\\helper\\userapicalls.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":11,"column":12,"nodeType":"137","messageId":"138","endLine":11,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":27,"column":7,"nodeType":"141","endLine":27,"endColumn":11,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":63,"column":8,"nodeType":"141","endLine":63,"endColumn":10,"suggestions":"144"},{"ruleId":"139","severity":1,"message":"145","line":27,"column":8,"nodeType":"141","endLine":27,"endColumn":10,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"147","line":1,"column":26,"nodeType":"137","messageId":"138","endLine":1,"endColumn":35},{"ruleId":"135","severity":1,"message":"148","line":10,"column":12,"nodeType":"137","messageId":"138","endLine":10,"endColumn":17},{"ruleId":"135","severity":1,"message":"149","line":10,"column":19,"nodeType":"137","messageId":"138","endLine":10,"endColumn":27},{"ruleId":"135","severity":1,"message":"147","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"150","line":4,"column":34,"nodeType":"137","messageId":"138","endLine":4,"endColumn":44},{"ruleId":"135","severity":1,"message":"151","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"135","severity":1,"message":"152","line":12,"column":12,"nodeType":"137","messageId":"138","endLine":12,"endColumn":16},{"ruleId":"135","severity":1,"message":"153","line":12,"column":18,"nodeType":"137","messageId":"138","endLine":12,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":26,"column":30,"nodeType":"156","messageId":"157","endLine":26,"endColumn":32},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has missing dependencies: 'preLoad' and 'productId'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'props.match.params.categoryId'. Either include it or remove the dependency array.",["162"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'loadToCart' is defined but never used.","'result' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [id, token]",{"range":"169","text":"170"},"Update the dependencies array to be: [preLoad, productId]",{"range":"171","text":"172"},"Update the dependencies array to be: [props.match.params.categoryId]",{"range":"173","text":"174"},[731,735],"[id, token]",[1890,1892],"[preLoad, productId]",[775,777],"[props.match.params.categoryId]"]